@model FurnitureDesignArchive.Models.Furniture
@using FurnitureDesignArchive.Models

@{
    ViewBag.Title = "Details";

    double TotalBoardFoot = 0;
    var getPartsListForBoardFoot = ViewBag.Parts;//From Controller Furnitures/Details
    foreach (var item in getPartsListForBoardFoot)
    {
        if (item.FurnitureIndex == Model.FurnitureID)
        {
            TotalBoardFoot += @item.partBoardFoot;
        }
    }

}

<div class="furnitureDetailsContainer">
    <img class="furnitureImageBlock" src="@Html.DisplayFor(model => model.FurnitureImg)" alt="Shaker Side Table Image" />

    <div class="furnitureDetails">
        <div class="furnitureTitleFlex">
            <h2>@Html.DisplayFor(model => model.FurnitureName) Details</h2>
                <button>@Html.ActionLink("Edit", "Edit", new { id = Model.FurnitureID })</button>
        </div>
              <hr />
        <div>
            <dl class="dl-horizontal">
                <dt>@Html.DisplayNameFor(model => model.buildLevel)</dt>
                <dd>@Html.DisplayFor(model => model.buildLevel)</dd>

                <dt>@Html.DisplayNameFor(model => model.furnitureType)</dt>
                <dd>@Html.DisplayFor(model => model.furnitureType)</dd>

                <dt>@Html.DisplayNameFor(model => model.AdditionalNotes)</dt>
                <dd>@Html.DisplayFor(model => model.AdditionalNotes)</dd>

                <dt>@Html.DisplayNameFor(model => model.CompletedBefore)</dt>
                <dd>@Html.DisplayFor(model => model.CompletedBefore)</dd>
            </dl>
        </div>
    </div>
</div>


<hr />
@* TODO: BLOCK OUT HTML FOR CSS LAYOUT *@

<div>
    <h4> Furniture Parts List </h4>
    <button>@Html.ActionLink("+ Add Part", "Create", "FurnitureParts", new { Model.FurnitureID, Model.FurnitureName }, null)</button>
</div>

<table>
    <tr>
        <th>Part Name</th>
        <th>Width</th>
        <th>Length</th>
        <th>Board Thickness</th>
        <th>Part Count</th>
        <th>Board Foot</th>
        <th> </th>
    </tr>

    @{
        var getParts = ViewBag.Parts;//From Controller Furnitures/Details
        foreach (var part in getParts)
        {
            int id = part.FurniturePartId;
            if (part.FurnitureIndex == Model.FurnitureID)
            {
                <tr>
                    <td>@part.PartName</td>
                    <td>@part.Width"</td>
                    <td>@part.Length"</td>
                    <td>@part.BoardThickness"</td>
                    <td>@part.PartCount</td>
                    <td>@part.partBoardFoot'</td>
                    <td>@Html.ActionLink("Edit", "Edit", "FurnitureParts", new { id }, null)</td>
                </tr>
            }
        }
    }

    <tr>
        <td></td>
        <td></td>
        <td></td>
        <td></td>
        <td><b>Total Board Foot: </b></td>
        <td><b><i>@TotalBoardFoot'</i></b></td>
        <td></td>
    </tr>

</table>




@{ 
    <h4>Part Notes</h4>
    foreach (var part in getParts)
    {
        if (part.FurnitureIndex == Model.FurnitureID)
        {
            <p><b>@part.PartName:</b> @part.PartNotes</p>
        }
    }
}




@*<p class="buildLevel"><b>Build Level:</b>@Html.DisplayFor(modelItem => item.buildLevel)</p>

    <p class="builtBefore">
        <b>Built before: </b>@if (item.CompletedBefore == true)
        { <text>Yes</text> }
        else
        { <text>No</text> }
    </p>*@

<p class="detailButtons">
    @*@Html.ActionLink("Edit", "Edit", new { id = item.FurnitureID }) |*@
    @*@Html.ActionLink("Details", "Details", new { id = item.FurnitureID })*@
    @*@Html.ActionLink("Delete", "Delete", new { id = item.FurnitureID })*@
</p>