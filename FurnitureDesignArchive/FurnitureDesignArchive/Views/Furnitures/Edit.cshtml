@model FurnitureDesignArchive.Models.Furniture

@{
    ViewBag.Title = "Edit";
}

<div class="container">
    <div class="editWrap">
        @Html.ActionLink("Back to List", "Index", null, new { @class = "backTo" })


        <h2>Edits For: </h2>
        <h2>@Model.FurnitureName</h2>

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="FormContainer">
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.FurnitureID)

                <div class="form-group">
                    @Html.LabelFor(model => model.FurnitureName, htmlAttributes: new { @class = "control-label" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.FurnitureName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FurnitureName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.FurnitureImg, htmlAttributes: new { @class = "control-label" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.FurnitureImg, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FurnitureImg, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.buildLevel, htmlAttributes: new { @class = "control-label" })
                    <div class="col-md-10">
                        @Html.EnumDropDownListFor(model => model.buildLevel, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.buildLevel, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.furnitureType, htmlAttributes: new { @class = "control-label" })
                    <div class="col-md-10">
                        @Html.EnumDropDownListFor(model => model.furnitureType, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.furnitureType, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.AdditionalNotes, htmlAttributes: new { @class = "control-label" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.AdditionalNotes, new { @class = "textArea-control" })
                        @Html.ValidationMessageFor(model => model.AdditionalNotes, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CompletedBefore, htmlAttributes: new { @class = "control-label" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.CompletedBefore)
                            @Html.ValidationMessageFor(model => model.CompletedBefore, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="save" />
                    </div>
                </div>
            </div>
        }

    </div>
</div>